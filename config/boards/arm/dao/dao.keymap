/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define LANG 0
#define SIGNS 1
#define NAVI 2
#define ADJUST 3

&lt {
    quick_tap_ms = <100>;
};

&mt {
    quick_tap_ms = <100>;
};

/ {
    behaviors {

        // Positional Homerow mods
        // Homerow mods that prevent accidental activations when rolling keys,
        // such as when typing `st` or `ne` on colemak-dh layouts or `as` on
        // qwerty.
        //
        // Works by only allowing a mod to activate within tapping-term if
        // it's on the opposite side of the keyboard or on the same side thumb
        // keys.

        // Further optimization using urob's timerless homerow mods method:
        // https://github.com/urob/zmk-config#timeless-homerow-mods
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };


        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.
        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            // hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            // hold-trigger-on-release;
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "layer_switch_with_escape";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&ch_lt>, <&kp ESC>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "lang_switch_with_escape";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&ch_lg>, <&kp ESC>;
        };
    };


    macros {
        ch_lt: ch_lt {
            label = "ch_lt";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&tog 1 &kp LSHIFT>,
                <&macro_tap>,
                <&kp LALT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&tog 1 &kp LSHIFT>;
        };

        ch_lg: ch_lg {
            label = "ch_lg";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_press>,
                <&kp LSHIFT>,
                <&macro_tap>,
                <&kp LALT>,
                <&macro_release>,
                <&kp LSHIFT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // .--------------------------------------------------------------.       .-----------------------------------------------------------.
            // | 1ch_lg/2ESC  |  Q      |  W     |  E     |  R      |  T      |       |  Y     |  U      |  I      |  O      |   P      |    [     |
            // |--------------+---------+--------+--------+---------+---------|       |--------+---------+---------+---------+----------+----------|
            // |   Tab/SHFT   |  A      |  S     |  D     |  F      |  G      |       |  H     |  J      |  K      |  L      |    ;     |   '/RSHFT|
            // |--------------+---------+--------+--------+---------+---------|       |--------+---------+---------+---------+----------+----------|
            // |   CTRL       |  Z      |  X     |  C     |  V      |  B      |       |  N     |  M      |    ,    |    .    |    /     |   `|ALT  |
            // '---------------------------------+--------+---------+---------+       |--------+---------+---------+---------+----------+----------'
            //                                   | DEL/GUI|ENT/SIGNS|SPC/NAVI |       |SPC/NAVI|ENT/SIGNS|  BSPC   |
            //                                   '--------+---------+---------'       '--------+---------+---------'

            bindings = <
&td1           &kp Q  &kp W  &kp E         &kp R          &kp T           &kp Y           &kp U          &kp I      &kp O    &kp P     &kp LBKT
&mt LSHFT TAB  &kp A  &kp S  &kp D         &kp F          &kp G           &kp H           &kp J          &kp K      &kp L    &kp SEMI  &mt RSHFT SQT
&kp LCTRL      &kp Z  &kp X  &kp C         &kp V          &kp B           &kp N           &kp M          &kp COMMA  &kp DOT  &kp FSLH  &mt RALT GRAVE
                             &mt LGUI DEL  &lt SIGNS RET  &lt NAVI SPACE  &lt NAVI SPACE  &lt SIGNS RET  &kp BSPC
            >;
        };

        lower_layer {
            // .--------------------------------------------------------------.       .-----------------------------------------------------------.
            // | 1ch_lg/2ESC  |    !   |    @    |   #    |    $    |    %    |       |   ^    |    &    |    *    |    (    |    )     |    -     |
            // |--------------+---------+--------+--------+---------+---------|       |--------+---------+---------+---------+----------+----------|
            // |   Tab/SHFT   |        |         |        |         |         |       |        |         |         |         |          | =/RSHFT  |
            // |--------------+---------+--------+--------+---------+---------|       |--------+---------+---------+---------+----------+----------|
            // |   CTRL       |        |         |        |         |    [    |       |   ]    |         |         |         |    \     |   ALT    |
            // '---------------------------------+--------+---------+---------+       |--------+---------+---------+-------------------------------'
            //                                   | DEL/GUI|ENT/SIGNS|SPC/NAVI |       |SPC/NAVI|ENT/SIGNS|  BSPC   |
            //                                   '--------+---------+---------'       '--------+---------+---------'

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT         &kp CARET         &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp MINUS
&trans  &ch_lt    &none   &none     &none     &none             &none             &none     &none     &none     &none     &mt RSHFT EQUAL
&trans  &none     &none   &none     &none     &kp LBKT          &kp RBKT          &none     &none     &none     &kp BSLH  &kp RALT
                          &trans    &trans    &lt ADJUST SPACE  &lt ADJUST SPACE  &trans    &trans
            >;
        };

        raise_layer {
            // .---------------------------------------------------------------.       .------------------------------------------------------------------.
            // |     INS      |        |   PgUP  |    UP  |   PgDn  |   HOME   |       |         |    7     |    8    |    9     |          |    -        |
            // |--------------+--------+---------+--------+---------+----------|       |---------+----------+---------+----------+----------+-------------|
            // |     Tab/SHFT |  PSCRN |   LEFT  |   DOWN |   RIGHT |   END    |       |         |    4     |    5    |    6     |          | =/RSHFT     |
            // |--------------+--------+---------+--------+---------+----------|       |---------+----------+---------+----------+----------+-------------|
            // |     Ctrl     |  LGUI  |         |        |CTRL+LEFT|CTRL+RIGHT|       |    0    |    1     |    2    |    3     |          |   ALT       |
            // '---------------------------------+--------+---------+----------+       |---------+----------+---------+-----------------------------------'
            //                                   |        |  ADJUST |          |       |  SPC    |  ENT     |  BSPC   |
            //                                   '--------+---------+----------'       '---------+----------+---------'

            bindings = <
&kp INS  &none      &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN       &kp HOME             &none   &kp N7          &kp N8  &kp N9  &none  &kp MINUS
&trans   &kp PSCRN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW     &kp END              &none   &kp N4          &kp N5  &kp N6  &none  &mt RSHFT EQUAL
&trans   &kp LGUI   &none           &none           &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &kp N0  &kp N1          &kp N2  &kp N3  &none  &kp RALT
                                    &trans          &lt ADJUST RET      &trans               &trans  &lt ADJUST RET  &trans
            >;
        };

        adjust_layer {
            // .--------------------------------------------------------.       .--------------------------------------------------------------.
            // |  RESET  |  BT0   |  BT1   |   BT2  |         |  BTCL   |       |   VOL+ |   F7   |   F8    |   F9    |   F12    |  RESET      |
            // |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
            // |  BOOT   |        |        |        |         |         |       |   VOL- |   F4   |   F5    |   F6    |   F11    |  BOOT       |
            // |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
            // |         |        |        |        |         | OUT_TOG |       | OUT_TOG|   F1   |   F2    |   F3    |   F10    |  ALT        |
            // '---------------------------+--------+---------+---------+       |--------+--------+---------+----------------------------------'
            //                             |        |         |         |       |        |        |         |
            //                             '--------+---------+---------'       '--------+--------+---------'

            bindings = <
&sys_reset   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none   &bt BT_CLR   &kp C_VOLUME_UP    &kp F7  &kp F8  &kp F9  &kp F12  &sys_reset
&bootloader  &none         &none         &none         &none   &none        &kp C_VOLUME_DOWN  &kp F4  &kp F5  &kp F6  &kp F11  &bootloader
&none        &none         &none         &none         &none   &out OUT_TOG &out OUT_TOG       &kp F1  &kp F2  &kp F3  &kp F10  &kp RALT
                                         &trans        &trans  &trans       &trans             &trans  &trans
            >;
        };
    };
};